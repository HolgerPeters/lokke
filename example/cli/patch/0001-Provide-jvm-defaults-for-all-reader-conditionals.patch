From 640ad1f12a47102f2d0bba61d91b510c9ad17373 Mon Sep 17 00:00:00 2001
From: Rob Browning <rlb@defaultvalue.org>
Date: Sun, 27 Dec 2020 15:38:01 -0600
Subject: [PATCH 1/1] Provide jvm defaults for all reader conditionals

---
 src/main/clojure/clojure/tools/cli.cljc | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/main/clojure/clojure/tools/cli.cljc b/src/main/clojure/clojure/tools/cli.cljc
index 5344e0c..8ab48a1 100644
--- a/src/main/clojure/clojure/tools/cli.cljc
+++ b/src/main/clojure/clojure/tools/cli.cljc
@@ -135,7 +135,7 @@
          (recur options (into extra-args (vec (rest args))) nil)
 
          (and (opt? opt) (nil? spec))
-         (throw #?(:clj (Exception. (str "'" opt "' is not a valid argument"))
+         (throw #?(:default (Exception. (str "'" opt "' is not a valid argument"))
                    :cljs (js/Error. (str "'" opt "' is not a valid argument"))))
 
          (and (opt? opt) (spec :flag))
@@ -240,7 +240,7 @@
       (when (seq unknown-keys)
         (let [msg (str "Warning: The following options to parse-opts are unrecognized: "
                        (s/join ", " unknown-keys))]
-          #?(:clj  (binding [*out* *err*] (println msg))
+          #?(:default  (binding [*out* *err*] (println msg))
              :cljs (binding [*print-fn* *print-err-fn*] (println msg)))))))
 
   (select-keys map spec-keys))
@@ -381,7 +381,7 @@
   (let [{:keys [validate-fn validate-msg]} spec]
     (or (loop [[vfn & vfns] validate-fn [msg & msgs] validate-msg]
           (when vfn
-            (if (try (vfn value) (catch #?(:clj Throwable :cljs :default) e))
+            (if (try (vfn value) (catch #?(:default Throwable :cljs :default) e))
               (recur vfns msgs)
               [::error (validation-error opt optarg msg)])))
         [value nil])))
@@ -391,7 +391,7 @@
         [value error] (if parse-fn
                         (try
                           [(parse-fn value) nil]
-                          (catch #?(:clj Throwable :cljs :default) e
+                          (catch #?(:default Throwable :cljs :default) e
                             [nil (parse-error opt optarg (str e))]))
                         [value nil])]
     (if error
-- 
2.29.2

