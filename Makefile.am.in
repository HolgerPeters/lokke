
# Makefile.am is automatically generated from Makefile.am.in via ./gen-makefile

CLEANFILES =
lokke_clean =
lokke_uninstall =

state:
	mkdir state
lokke_clean += state

state/module-paths:: state
	dev/gen-module-paths | dev/refresh "$@"

Makefile.am: Makefile.am.in gen-makefile state/module-paths
	./gen-makefile state/module-paths

AUTOMAKE_OPTIONS = subdir-objects
ACLOCAL_AMFLAGS = -I m4

SUBDIRS = gnulib
LOG_DRIVER = env AM_TAP_AWK='$(AWK)' $(SHELL) $(top_srcdir)/build-aux/tap-driver.sh

EXTRA_DIST = m4/gnulib-cache.m4 $(TESTS)

noinst_SCRIPTS = lok lokke

# FIXME: preserve symlinks in install tree?
man1_MANS = lok.1 lokke.1

AM_CFLAGS = \
  -g -I gnulib -Wall -Werror -std=gnu11 -fdiagnostics-color=always \
  -fno-strict-aliasing

vpkglibdir = $(pkglibdir)/$(LOKKE_EFFECTIVE_VERSION)
vpkglib_LTLIBRARIES = lib/lokke-reader.la  lib/lokke-pcre2.la lib/lokke-vector.la

# -module can't go here because automake only detects it directly in LDFLAGS
lokke_lib_ldflags = -release $(VERSION) @GUILE_LDFLAGS@ @GUILE_LIBS@

lib_lokke_reader_la_SOURCES = lib/lokke-reader.c
lib_lokke_reader_la_CFLAGS = @GUILE_CFLAGS@ $(AM_CFLAGS)
lib_lokke_reader_la_LDFLAGS = -module $(lokke_lib_ldflags)

lib_lokke_vector_la_SOURCES = lib/lokke-vector.c
lib_lokke_vector_la_CFLAGS = @GUILE_CFLAGS@ $(AM_CFLAGS)
lib_lokke_vector_la_LDFLAGS = -module $(lokke_lib_ldflags)

lib_lokke_pcre2_la_SOURCES = lib/lokke-pcre2.c
lib_lokke_pcre2_la_CFLAGS = @GUILE_CFLAGS@ $(AM_CFLAGS) @PCRE2_CFLAGS@
lib_lokke_pcre2_la_LDFLAGS = -module $(lokke_lib_ldflags) @PCRE2_LIBS@

# Avoids the otherwise circular dependency
BUILT_SOURCES = \
  lib/lokke-reader.x lib/lokke-pcre2.x lib/lokke-vector.x \
  mod/lokke/base/version.scm

# FIXME: see guile's am/guilec for a way to order the install wrt timestamps

mod_clj_srcs =
mod_scm_srcs =
compiled_go = $(mod_clj_srcs:%.clj=%.go) $(mod_scm_srcs:%.scm=%.go)

$(compiled_go): $(vpkglib_LTLIBRARIES)

moddatadir = $(pkgdatadir)/$(LOKKE_EFFECTIVE_VERSION)
modlibdir = $(pkglibdir)/$(LOKKE_EFFECTIVE_VERSION)
CLEANFILES += $(compiled_go)

# This section is automatically generated
@MODULE_FILES@
# End of automatically generated section


export LOKKE_TEST_PROTOCOL = tap

TESTS = \
  test/equality \
  test/clojure-comparison \
  test/clojure-defmacro \
  test/clojure-dynamic \
  test/clojure-evaluation \
  test/clojure-exceptions \
  test/clojure-metadata \
  test/clojure-ns \
  test/clojure-string \
  test/clojure-vector \
  test/clojure-pr \
  test/lokke-comparison \
  test/lokke-core \
  test/lokke-destructure \
  test/lokke-exception \
  test/lokke-hash-map \
  test/lokke-hash-set \
  test/lokke-metadata \
  test/lokke-ns \
  test/lokke-pr \
  test/lokke-scm-atom \
  test/lokke-scm-promise \
  test/lokke-scm-vector \
  test/lokke-symbol \
  test/ns-lokke-io \
  test/ns-lokke-shell \
  test/reader-basics \
  test/clojure-collection \
  test/clojure-destructure \
  test/clojure-fn \
  test/clojure-math \
  test/clojure-metadata \
  test/clojure-walk \
  test/clojure-zip \
  test/standalone-install \
  test/startup-randomization


SUFFIXES = .x .clj.go .scm.go

.c.x:
	guile-snarf -o $@ $< @GUILE_CFLAGS@ $(AM_CFLAGS)

.clj.go:
	GUILE=$(CURDIR)/guile \
	GUILE_AUTO_COMPILE=0 \
	$(GUILD) compile \
	  -Wunbound-variable -Wmacro-use-before-definition \
	  -Warity-mismatch -Wformat \
	--from=lokke -o $@ $<

.scm.go:
	GUILE=$(CURDIR)/guile \
	GUILE_AUTO_COMPILE=0 \
	$(GUILD) compile \
	  -Wunbound-variable -Wmacro-use-before-definition \
	  -Warity-mismatch -Wformat \
	-o $@ $<


lok lokke: gen-lokke config.status Makefile
	./gen-lokke $@ '$(GUILE)' '' '' '' > $@.tmp.$$PID
	chmod 0755 $@.tmp.$$PID
	mv $@.tmp.$$PID $@
CLEANFILES += lok lok.tmp.*
CLEANFILES += lokke lokke.tmp.*

lokke_dest_scripts = \
  "$(DESTDIR)$(bindir)"/lok \
  "$(DESTDIR)$(bindir)"/lokke

lokke_uninstall += $(lokke_dest_scripts)

$(lokke_dest_scripts): gen-lokke config.status Makefile
	$(install_sh) -d "$(DESTDIR)$(bindir)"
	./gen-lokke $$(basename "$@") '$(GUILE)' \
	  '$(vpkglibdir)' '$(moddatadir)' '$(modlibdir)' \
	  > $$(basename "$@")-install.tmp
	chmod 0755 $$(basename "$@")-install.tmp
	mv $$(basename "$@")-install.tmp $@
CLEANFILES += lok-install.tmp.* lokke-install.tmp.*


# Install a slightly different version of the tools
# moduledir is defined by gen-makefile
# FIXME: tmp files?
install-data-hook: $(lokke_dest_scripts)

uninstall-local:
	rm -rf $(lokke_uninstall)

clean-local:
	rm -rf $(lokke_clean)
