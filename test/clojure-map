#!./lokke -0
;; -*-clojure-*-
!#

;;; Copyright (C) 2022 Rob Browning <rlb@defaultvalue.org>
;;; SPDX-License-Identifier: LGPL-2.1-or-later OR EPL-1.0+

(ns test.clojure-map
  (:require
   [clojure.test :refer [begin-tests deftest end-tests is testing]]))

(begin-tests (ns-name *ns*))

(deftest keys-behavior
  (is (= nil (keys nil)))
  (is (= nil (keys {})))
  (is (= #{:x :y :z} (-> {:x 1 :y 2 :z 3} keys set)))
  (is (= (map first (seq {:x 1 :y 2 :z 3}))
         (keys {:x 1 :y 2 :z 3}))))

(deftest reduce-kv-behavior
  (is (= "x" (reduce-kv / "x" {})))
  (is (= 21 (reduce-kv (fn [result k v] (+ result k v))
                       0
                       (hash-map 1 2 3 4 5 6)))))

(deftest map-invert-behavior
  (is (= {:x 1 :y 2 :z 3}
         (map-invert {1 :x 2 :y 3 :z}))))

(deftest update-keys
  (is (= {:x 1 :y 2 :z 3}
         (update-keys {"x" 1 "y" 2 "z" 3} keyword))))

(deftest update-vals
  (is (= {:x 2 :y 3 :z 4}
         (update-vals {:x 1 :y 2 :z 3} inc))))

(end-tests (ns-name *ns*) :exit? true)
