":"; exec ./lokke -i "$0"  # -*-clojure-*-

;;; Copyright (C) 2019 Rob Browning <rlb@defaultvalue.org>
;;;
;;; This project is free software; you can redistribute it and/or
;;; modify it under the terms of (at your option) either of the
;;; following two licences:
;;;
;;;   1) The GNU Lesser General Public License as published by the
;;;      Free Software Foundation; either version 2.1, or (at your
;;;      option) any later version
;;;
;;;   2) The Eclipse Public License; either version 1.0 or (at your
;;;      option) any later version.

(ns test.clojure-metadata
  (:require
   [clojure.test :refer [begin-tests end-tests is testing]]))

(begin-tests (ns-name *ns*))

(testing "vector"
  (is (= nil (meta [])))
  (is (= nil (meta (with-meta [] nil))))
  (is (= {} (meta (with-meta [] {}))))
  (is (= {:x 1} (meta (with-meta [] {:x 1}))))
  (is (= {:x 1} (meta (assoc (with-meta [] {:x 1}) 0 1) ))))

(testing "variables"
  (def meta-test-var nil)
  (is (= nil (meta #'meta-test-var)))

  (alter-meta! #'meta-test-var assoc :x 1)
  (is (= {:x 1} (meta #'meta-test-var)))

  (alter-meta! #'meta-test-var (constantly nil))
  (is (= nil (meta #'meta-test-var))))

(testing "ns"
  (let [cur (ns-name *ns*)]
    (ns meta-test-ns)
    (in-ns cur))
  (let [test-ns (find-ns 'meta-test-ns)]
    (is (= nil (meta test-ns)))

    (alter-meta! test-ns assoc :x 1)
    (is (= {:x 1} (meta test-ns)))

    (alter-meta! test-ns (constantly nil))
    (is (= nil (meta test-ns)))))

(end-tests (ns-name *ns*) :exit? true)
