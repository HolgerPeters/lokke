#!./guile
!# ;; -*-scheme-*-

;;; Copyright (C) 2019 Rob Browning <rlb@defaultvalue.org>
;;; SPDX-License-Identifier: LGPL-2.1-or-later OR EPL-1.0+

(use-modules
 ((lokke scm test-anything) #:select (tap-test-runner))
 ((lokke concurrent) #:prefix t/)
 ((srfi srfi-64)
  #:select (test-assert
            test-begin
            test-end
            test-eq
            test-equal
            test-eqv
            test-group
            test-runner-current
            test-runner-fail-count)))

(when (equal? "tap" (getenv "LOKKE_TEST_PROTOCOL"))
  (test-runner-current (tap-test-runner)))

(test-begin (basename (car (program-arguments))))

(test-assert (t/atom? (t/atom 1)))
(test-equal 1 (t/deref (t/atom 1)))

(test-equal 2 (t/reset! (t/atom 1) 2))

(test-equal #t (t/compare-and-set! (t/atom 1) 1 2))
(test-equal 2 (let ((a (t/atom 1)))
                (t/compare-and-set! a 1 2)
                (t/deref a)))
(test-equal #f (t/compare-and-set! (t/atom 1) 3 2))
(test-equal 1 (let ((a (t/atom 1)))
                (t/compare-and-set! a 3 2)
                (t/deref a)))

(test-equal 2 (t/swap! (t/atom 1) (lambda (v) (1+ v))))

(test-end)

(unless (zero? (test-runner-fail-count (test-runner-current)))
  (exit 2))
